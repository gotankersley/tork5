Optimizations: (create branch for these)
- asm.js for AI
- change mcts node from assoc to indexed array?
- change bitboard object to p1, p2 vars to avoid overhead? (hi bit turn?)
- inline functions / function vs prototype functions?
- different minification options (closure advanced)
- pre-calc bitcount in findwin
- add move children during expansion directly to node


Wins:
- Handle tie wins in findWin


Features to add:
- Show last board state
- Show hotkeys
- console output
- arena tool

Bugs / issues:
- Player can hover / rotate when AI is turning board error

Cleanup / Refactor:
- Change dir to rot (what about row as r collisions)?
- generic dropdown menu
- player select code in HTML
- Ind to pos maybe?
- some magic numbers like 8, and 12 in find wins
- terminology - consistant use of board, or bitboard / boardObj, and also quadId
- cleanup QUAD-MID-WINS so rotation is reversed

AI:
- web worker threads

Multiplayer
- websockets?
- move notation

Cool FX:
- webgl
- CSS3 animations

Opening book: 
- sqlite on localhost